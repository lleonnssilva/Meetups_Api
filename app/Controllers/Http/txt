// const meetups = await Database.raw(
    //   'Select id,title,image,description,event_date,place ,subscriptions, registered ' +
    //     'from Meetups m left join ' +
    //     '(select s.user_id,s.meetup_id,count(*) registered from Subscriptions s ' +
    //     'left join users u on s.user_id=u.id ' +
    //     'where s.user_id not in(' +
    //     `${auth.current.user.id}` +
    //     ') group by s.user_id,s.meetup_id)p on p.meetup_id=m.id ' +
    //     'left join ' +
    //     '(select j.meetup_id,count(*) subscriptions from Subscriptions j ' +
    //     'group by j.meetup_id)j on j.meetup_id=m.id ' +
    //     ' group by id,title,image , registered ,subscriptions'
    // )
    // return meetups



    // const meetups = await Database.select(
    //   'meetups.id',
    //   'title',
    //   'description',
    //   'image',
    //   'place',
    //   'event_date',
    //   'numLimitSubscriptions'
    // )
    //   .from('meetups')
    //   .leftJoin('subscriptions', 'meetups.id', 'subscriptions.meetup_id')
    //   // .leftJoin('subscriptions as b', { 'b.user_id': 17, 's.meetup_id': 'm.id' })

    // // .count('b.id as inscrito')

    //   .count('subscriptions.user_id as inscritos')
    //   .groupByRaw('meetups.id')
    // //, title,description,image,place,event_date
    // return meetups

    // const meetups = await Meetup.query()
    //   // .whereDoesntHave('subscriptions', (builder) => {
    //   //   builder.where('user_id', auth.current.user.id)
    //   // })
    //   .with('subscriptions', (builder) => {
    //     builder.where('user_id', auth.current.user.id)
    //   })
    //   .withCount('subscriptions')
    //   .orderBy('event_date', 'asc')
    //   .fetch()
    // return meetups


// const meetups = await Meetup.query()
    //   .with('subscriptions')
    //   .where('title', 'LIKE', `%${params.id}%`)
    //   .orderBy('event_date', 'asc')
    //   .fetch()
    // return meetups



 // const meetups = await Database.raw(
    //   'Select id,title,image,description,event_date,place ,subscriptions, registered ' +
    //     'from Meetups m left join ' +
    //     '(select s.user_id,s.meetup_id,count(*) registered from Subscriptions s ' +
    //     'left join users u on s.user_id=u.id ' +
    //     'where s.user_id  in(' +
    //     `${auth.current.user.id}` +
    //     ') group by s.user_id,s.meetup_id)p on p.meetup_id=m.id ' +
    //     'left join ' +
    //     '(select j.meetup_id,count(*) subscriptions from Subscriptions j ' +
    //     'group by j.meetup_id)j on j.meetup_id=m.id ' +
    //     ' group by id,title,image , registered ,subscriptions'
    // )
    // return meetups



 // const meetup = await Database.raw(
    //   'Select id,title,image,description,event_date,place ,subscriptions, registered ' +
    //     'from Meetups m left join ' +
    //     '(select s.user_id,s.meetup_id,count(*) registered from Subscriptions s ' +
    //     'left join users u on s.user_id=u.id ' +
    //     'where s.user_id = 17 group by s.user_id,s.meetup_id)p on p.meetup_id=m.id ' +
    //     'left join ' +
    //     '(select j.meetup_id,count(*) subscriptions from Subscriptions j ' +
    //     'group by j.meetup_id)j on j.meetup_id=m.id ' +
    //     'where id = ' +
    //     `'${params.id}'` +
    //     '' +
    //     ' group by id,title,image , registered ,subscriptions'
    // )
    // return meetup


    // const meetups = await Meetup.query()
    //   .withCount('subscriptions')
    //   .with('preferences')
    //   .with('subscriptions')
    //   .orderBy('event_date', 'asc')
    //   .fetch()

    // const meetups = await Database.raw(
    //   'select count(s.id) qtd ,m.id from meetups m left join  subscriptions s on s.meetup_id=m.id where m.id=6 and s.user_id=1 group by m.id'
    // )
    // const meetups = await Meetup.query()
    //   .withCount('subscriptions')
    //   .with('preferences')
    //   .with('subscriptions')
    //   .orderBy('event_date', 'asc')
    //   .fetch()
    // return meetups


   // const meetups = await Meetup.query()
    //   .withCount('subscriptions')
    //   .with('preferences')
    //   .with('subscriptions')
    //   .orderBy('event_date', 'asc')
    //   .fetch()

    // const meetups = await Database.raw(
    //   'select count(s.id) qtd ,m.id from meetups m left join  subscriptions s on s.meetup_id=m.id where m.id=6 and s.user_id=1 group by m.id'
    // )
    // const meetups = await Meetup.query()
    //   .withCount('subscriptions')
    //   .with('preferences')
    //   .with('subscriptions')
    //   .orderBy('event_date', 'asc')
    //   .fetch()
    // return meetups


  // async index ({ request }) {
  //   const users = await User.query()
  //     .with('preferences')
  //     .fetch()
  //   return users
  // }


async store ({ request }) {
    const data = request.only(['title'])

    const preference = await Preference.create(data)

    return preference
  }


  // async update ({ params, request, auth }) {
  //   const meetup = await Meetup.findOrFail(params.id)

  //   const { preferences, ...data } = request.only([
  //     'title',
  //     'description',
  //     'place',
  //     'event_date',
  //     'image',
  //     'numLimitSubscriptions',
  //     'preferences'
  //   ])

  //   if (preferences && preferences.length > 0) {
  //     meetup.merge({ user_id: auth.user.id, ...data })
  //     await meetup.save()
  //     await meetup.preferences().sync(preferences)
  //     await meetup.load('preferences')
  //   }
  //   return meetup
  // }


  async index () {
    const meetups = await Database.raw(
      'Select id,title,image ,inscritos, inscrito ' +
        'from Meetups m left join ' +
        '(select s.user_id,s.meetup_id,count(*) inscrito from Subscriptions s ' +
        'left join users u on s.user_id=u.id ' +
        'where s.user_id = 17 group by s.user_id,s.meetup_id)p on p.meetup_id=m.id ' +
        'left join ' +
        '(select j.meetup_id,count(*) inscritos from Subscriptions j ' +
        'group by j.meetup_id)j on j.meetup_id=m.id ' +
        'group by id,title,image , inscrito ,inscritos'
    )
    return meetups
  }



    // const meetups = await Database.raw(
    //   'Select id,title,image,description,event_date,place ,subscriptions, registered ' +
    //     'from Meetups m left join ' +
    //     '(select s.user_id,s.meetup_id,count(*) registered from Subscriptions s ' +
    //     'left join users u on s.user_id=u.id ' +
    //     'where s.user_id =  ' +
    //     `${auth.current.user.id}` +
    //     ' group by s.user_id,s.meetup_id)p on p.meetup_id=m.id ' +
    //     'left join ' +
    //     '(select j.meetup_id,count(*) subscriptions from Subscriptions j ' +
    //     'group by j.meetup_id)j on j.meetup_id=m.id ' +
    //     'where lower(title) like' +
    //     `'%${String(params.id)}%'` +
    //     '' +
    //     ' group by id,title,image , registered ,subscriptions'
    // )
    // return meetups


 async index () {
    const subscriptions = await Subscription.query()
      .with('users')
      .fetch()
    return subscriptions
  }

  Route.post('passwords', 'ForgotPasswordController.store')
Route.put('passwords', 'ForgotPasswordController.update')

